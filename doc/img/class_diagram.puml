@startuml

package daemon {
    class hpd {
        hpd_ev_loop_t *loop
        ev_signal sigint_watcher
        ev_signal sigterm_watcher
        int options_count
        argp_option_t *options
        hpd_module_t **option2module
    }

    class hpd_module {
        char *id;
        void *data;
    }

    class hpd_module_def {
        hpd_create_f on_create;
        hpd_destroy_f on_destroy;
        hpd_start_f on_start;
        hpd_stop_f on_stop;
        hpd_parse_opt_f on_parse_opt;
    }
}

package data_structures {
    class hpd_pair {
        char *k
        char *v
    }
}

package comm {
    class hpd_request {
        hpd_method_t method
        hpd_response_f on_response
        hpd_free_f on_free
        void *data
    }

    class hpd_response {
        hpd_status_t status
    }

    class hpd_value {
        char *body
        size_t len
    }
}

package model {
    class configuration {
    }
    class hpd_adapter {
        hpd_free_f on_free;
        void *data;
    }
    class hpd_device {
        hpd_free_f on_free;
        void *data;
    }
    class hpd_service {
        hpd_free_f on_free
        void *data
    }
    class hpd_parameter {
    }
    class hpd_action {
        hpd_method_t method
        hpd_action_f action
    }
}

hpd_request --> hpd_service
hpd_request --> hpd_value
hpd_response -> hpd_request
hpd_response -> hpd_value
hpd_value --> hpd_pair : headers
hpd "1" *-- "1" configuration
hpd "1" *-- "*" hpd_module
hpd_module "1" *-- "1" hpd_module_def
configuration "1" *-- "*" hpd_adapter
configuration "1" *-- "*" hpd_listener
hpd_adapter "1" *-- "*" hpd_device
hpd_adapter "1" *-- "*" hpd_listener
hpd_adapter --> "*" hpd_pair : attributes
hpd_device "1" *-- "*" hpd_service
hpd_device "1" *-- "*" hpd_listener
hpd_device --> "*" hpd_pair : attributes
hpd_service "1" *-- "*" hpd_parameter
hpd_service "1" *-- "*" hpd_listener
hpd_service --> "*" hpd_pair : attributes
hpd_service --> "*" hpd_action
hpd_parameter --> hpd_pair : attributes

class hpd_listener {
    enum {} type
    hpd_value_f on_change
    hpd_device_f on_attach
    hpd_device_f on_detach
    void *data
    hpd_free_f on_free
}

@enduml